{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","Menu","SubMenu","Layout","Content","Sider","Footer","strings","Radio","Group","LocalizedStrings","en","extID","extName","preview","extdef","extimg","maincolor","secondcolor","menuIcon","blockIcon","addLabel","addInput","addInputNum","addBool","addblock","addBlockFun","addBlockOutput","addBlockBool","addBlockHat","delSure","uniqBlockId","uniqBlockName","zh","BlockTypeMap","func","output","bool","hat","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","collapsed","color1Pick","color2Pick","color1","color2","editBlockID","blocks","menus","addBlockType","showMutation","bindAll","assertThisInitialized","blockColumn","title","dataIndex","key","width","render","text","react_default","a","createElement","href","record","src","concat","onClick","editBlock","opcode","name","divider","type","popconfirm","onConfirm","deleteBlock","previewWorkspace","Blockly","inject","media","toolbox","zoom","startScale","Procedures","externalProcedureDefCallback","mutation","cb","console","log","getFlyout","setRecyclingEnabled","window","ws","file","reader","FileReader","onerror","warn","onload","ev","dataUri","result","setState","readAsDataURL","_this2","xmlParts","clear","colorXML","menuIconURI","blockJsons","menuIconXML","push","apply","map","block","extendedOpcode","argIndex","blockJSON","category","colour","inputsInline","colourSecondary","extensions","iconURI","message0","iconJSON","height","args0","msg","args","arg","json","outputShape","nextStatement","previousStatement","checkboxInFlyout","inputXML","inputList","placeholder","replace","shadowType","fieldType","defaultValue","join","defineBlocksWithJsonArray","updateToolbox","declareWorkspace","blockType","mutationText","mutationRoot","newBlock","setDeletable","contextMenu","addStringNumberExternal","isNum","WidgetDiv","hide","procCode_","displayNames_","argumentIds_","utils","genUid","argumentDefaults_","updateDisplay_","focusLastEditor_","Msg","dom","Xml","textToDom","firstChild","domToMutation","initSvg","setPreviousStatement","setNextStatement","setInputsInline","setOutputShape","OUTPUT_SHAPE_ROUND","setOutput","OUTPUT_SHAPE_HEXAGONAL","_this$mutationRoot$ge","getRelativeToSurfaceXY","x","y","dy","dx","moveBy","mu","ref","oldDefaultToolbox","Blocks","defaultToolbox","addChangeListener","evt","onChangeFn","makeBlock","_this3","svg","getSvgRoot","bbox","getBBox","removeAttribute","xml","XMLSerializer","serializeToString","mutationToDom","argNames","JSON","parse","getAttribute","argCnt","proccode","getProcCode","split","n","length","argName","argType","check","domToText","toConsumableArray","filter","blk","addLabelExternal","addBooleanExternal","dataStr","encodeURIComponent","stringify","downloadAnchorNode","document","setAttribute","body","appendChild","click","remove","_this5","assign","readAsText","className","blockFunctions","blocksInfo","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","txt","blockCode","arguments","err","return","blkInfoCode","blockIconURI","indexJS","_this6","layout","style","trigger","collapsible","menu","theme","mode","defaultSelectedKeys","Item","icon","background","padding","margin","minHeight","row","col","span","input","onChange","e","target","offset","position","zIndex","lib","color","c","hex","upload","accept","showUploadList","beforeUpload","uploadMenuIcon","es_button","uploadBlockIcon","table","columns","dataSource","shape","generatePreview","id","marginTop","saveToJson","loadFromJson","exportJs","modal","visible","onOk","applyMutation","onCancel","closeMutationModal","injectDeclareWorkspace","Component","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff83b51f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import bindAll from 'lodash.bindall';\nimport LocalizedStrings from 'react-localization';\nimport { Alert, Row, Col, Button, Layout, Icon, Menu , Divider, Table, Radio, Popconfirm, Input, Modal, Upload } from 'antd';\nimport React, { Component } from 'react';\nimport Blockly from 'scratch-blocks';\n\nimport { SketchPicker } from 'react-color';\nimport logo from './logo.svg';\nimport './App.css';\nimport { string } from 'postcss-selector-parser';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\nconst RadioGroup = Radio.Group;\n\nlet strings = new LocalizedStrings({\n  en:{\n    extID: \"Extension ID\",\n    extName: \"Extension Name\",\n    preview: \"Generate Preview\",\n    extdef: \"Extension Define\",\n    extimg: \"Extension Image\",\n    maincolor: \"Extension Color\",\n    secondcolor: \"Parameter Color\",\n    menuIcon: \"Menu Icon\",\n    blockIcon: \"Block Icon\",\n    addLabel: \"Add Label\",\n    addInput: \"Add String Parameter\",\n    addInputNum: \"Add Number Parameter\",\n    addBool: \"Add Boolean Parameter\",\n    addblock: \"Add Blocks\",\n    addBlockFun: \"Add Functional Block\",\n    addBlockOutput: \"Add Output Block\",\n    addBlockBool: \"Add Boolean Block\",\n    addBlockHat: \"Add Hat Block\",\n    delSure: \"delete this block?\",\n    uniqBlockId: \"* block ID should be unique\",\n    uniqBlockName: \"* block parameter names should be unique\",\n  },\n  zh: {\n    extID: \"插件ID\",\n    extName: \"插件名称\",\n    preview: \"生成预览\",\n    extdef: \"插件定义\",\n    extimg: \"插件图标\",\n    maincolor: \"插件颜色\",\n    secondcolor: \"变量颜色\",\n    menuIcon: \"菜单栏图标\",\n    blockIcon: \"方块图标\",\n    addLabel: \"添加文本\",\n    addInput: \"添加文本变量\",\n    addInputNum: \"添加数字变量\",\n    addBool: \"添加布尔变量\",\n    addblock: \"添加方块\",\n    addBlockFun: \"添加函数方块\",\n    addBlockOutput: \"添加输出方块\",\n    addBlockBool: \"添加布尔方块\",\n    addBlockHat: \"添加帽子方块\",\n    delSure: \"删除该方块?\",\n    uniqBlockId: \"* 积木ID需要全局唯一\",\n    uniqBlockName: \"* 积木参数名字需要唯一\",\n  }\n});\n\nconst emptyToolBox = `<xml style=\"display: none\">\n<category name=\"Test\" id=\"testExt\" colour=\"#0FBD8C\" secondaryColour=\"#0DA57A\" >\n</category>\n</xml>`;\n\nconst OUTPUT_SHAPE_HEXAGONAL = 1;\nconst OUTPUT_SHAPE_ROUND = 2;\nconst OUTPUT_SHAPE_SQUARE = 3;\n\nconst BlockTypeMap = {\n  func: \"COMMAND\",\n  output: \"REPORTER\",\n  bool: \"BOOLEAN\",\n  hat: \"HAT\"\n}\n\nclass App extends Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      collapsed: true,\n      extID: 'testExt',\n      extName: 'Test',\n      color1Pick: false,\n      color2Pick: false,\n      color1: '#0FBD8C',\n      color2: '#0DA57A',\n      menuIcon: null,\n      blockIcon: null,\n      editBlockID: 'newblock',\n      blocks: [],\n      menus: [],\n      addBlockType: '',\n      showMutation: false\n    }\n    bindAll(this, [\n      \"uploadMenuIcon\",\n      \"uploadBlockIcon\",\n      \"closeMutationModal\",\n      \"generatePreview\",\n      \"addBlockFun\",\n      \"addBlockOutput\",\n      \"addBlockBool\",\n      \"addBlockHat\",\n      \"addLabel\",\n      \"addInput\",\n      \"addInputNum\",\n      \"addBool\",\n      \"applyMutation\",\n      \"injectDeclareWorkspace\",\n      \"makeBlock\",\n      \"editBlock\",\n      \"deleteBlock\",\n      \"saveToJson\",\n      \"loadFromJson\",\n      \"exportJs\"\n    ]);\n\n    this.blockColumn = [{\n      title: 'Op Code',\n      dataIndex: 'opcode',\n      key: 'opcode',\n      width: '20%',\n      render: text => <a href=\"javascript:;\">{text}</a>,\n    }, {\n      title: 'Preview',\n      dataIndex: 'svg',\n      key: 'svg',\n      render: (text, record) => (\n        <img src={`data:image/svg+xml;charset=utf-8,${text}`} />\n      )\n    }, {\n      title: 'Action',\n      key: 'action',\n      render: (text, record) => (\n        <span>\n          <a href=\"#\" onClick={() => this.editBlock(record.opcode)} >Edit {record.name}</a>\n          <Divider type=\"vertical\" />\n          <Popconfirm title={strings.delSure} onConfirm={() => this.deleteBlock(record.opcode)}>\n            <a href=\"#\">Delete</a>\n          </Popconfirm>\n        </span>\n      ),\n    }];\n  }\n\n  componentDidMount (){\n    this.previewWorkspace = Blockly.inject('preview', {\n      media: './media/',\n      toolbox: emptyToolBox,\n      zoom: {\n        startScale: 0.75\n      }\n    });\n\n    Blockly.Procedures.externalProcedureDefCallback = function (mutation, cb) {\n      console.log(\"externalProcedureDefCallback\");\n    }\n    this.previewWorkspace.getFlyout().setRecyclingEnabled(false);\n    window.ws = this.previewWorkspace;\n  }\n\n  uploadMenuIcon (file){\n    let reader = new FileReader();\n    const _this = this;\n    reader.onerror = function () {\n      console.warn(\"read image file error\")\n    };\n\n    reader.onload = function (ev) {\n      const dataUri = reader.result;\n      _this.setState({menuIcon: dataUri});\n    };\n    reader.readAsDataURL(file);\n  }\n\n  uploadBlockIcon (file){\n    let reader = new FileReader();\n    const _this = this;\n    reader.onerror = function () {\n      console.warn(\"read image file error\")\n    };\n\n    reader.onload = function (ev) {\n      const dataUri = reader.result;\n      _this.setState({blockIcon: dataUri});\n    };\n    reader.readAsDataURL(file);\n  }\n\n  generatePreview (){\n    const xmlParts = [];\n    this.previewWorkspace.clear();\n\n    const colorXML = `colour=\"${this.state.color1}\" secondaryColour=\"${this.state.color2}\"`;\n    let menuIconURI = '';\n    if (this.state.menuIcon) {\n        menuIconURI = this.state.menuIcon;\n    } else if (this.state.blockIcon) {\n        menuIconURI = this.state.blockIcon;\n    }\n    const blockJsons = [];\n    const menuIconXML = menuIconURI ?\n        `iconURI=\"${menuIconURI}\"` : '';\n    xmlParts.push(`<xml style=\"display: none\">`);\n    xmlParts.push(`<category name=\"${this.state.extName}\" id=\"${this.state.extID}\" ${colorXML} ${menuIconXML}>`);\n    xmlParts.push.apply(xmlParts, this.state.blocks.map(block => {\n      const extendedOpcode = `${this.state.extID}_${block.opcode}`;\n      let argIndex = 0;\n      const blockJSON = {\n        type: extendedOpcode,\n        category: this.state.extName,\n        colour: this.state.color1,\n        inputsInline: true,\n        colourSecondary: this.state.color2,\n        extensions: ['scratch_extension']\n      };\n      const iconURI = this.state.blockIcon;\n\n      if (iconURI) {\n          blockJSON.message0 = '%1 %2';\n          const iconJSON = {\n              type: 'field_image',\n              src: iconURI,\n              width: 40,\n              height: 40\n          };\n          const separatorJSON = {\n              type: 'field_vertical_separator'\n          };\n          blockJSON.args0 = [\n              iconJSON,\n              separatorJSON\n          ];\n          argIndex+=1;\n      }\n\n      blockJSON[`message${argIndex}`] = block.msg;\n      blockJSON[`args${argIndex}`] = block.args.map(arg => arg.json);\n\n\n      if (block.type === 'func'){\n        blockJSON.outputShape = OUTPUT_SHAPE_SQUARE;\n        blockJSON.nextStatement = null;\n        blockJSON.previousStatement = null;\n      } else if (block.type === 'output'){\n        blockJSON.outputShape = OUTPUT_SHAPE_ROUND;\n        blockJSON.output = \"String\";\n        blockJSON.checkboxInFlyout = true;\n      } else if (block.type === 'bool'){\n        blockJSON.output = \"Boolean\";\n        blockJSON.outputShape = OUTPUT_SHAPE_HEXAGONAL;\n      }\n\n      blockJsons.push(blockJSON);\n      const inputXML = block.args.map(arg => {\n        const inputList = [];\n        const placeholder = arg.placeholder.replace(/[<\"&]/, '_');\n        const shadowType = arg.shadowType;\n        const fieldType = arg.fieldType;\n        const defaultValue = arg.defaultValue || '';\n        inputList.push(`<value name=\"${placeholder}\">`);\n        if (shadowType) {\n          inputList.push(`<shadow type=\"${shadowType}\">`);\n          inputList.push(`<field name=\"${fieldType}\">${defaultValue}</field>`);\n          inputList.push('</shadow>');\n        }\n        inputList.push('</value>');\n        \n        return inputList.join('');\n      });\n      let blockXML = `<block type=\"${extendedOpcode}\">${inputXML.join('')}</block>`;\n      return blockXML;\n    }));\n    xmlParts.push('</category>');\n    xmlParts.push(`</xml>`);\n    Blockly.defineBlocksWithJsonArray(blockJsons);\n    console.log(\"extension\", xmlParts);\n    this.previewWorkspace.updateToolbox(xmlParts.join('\\n'));\n  }\n\n  closeMutationModal (){\n    this.declareWorkspace.clear();\n    this.setState({showMutation: false})\n  }\n\n  makeBlock (blockType, mutationText){\n    this.mutationRoot = this.declareWorkspace.newBlock('procedures_declaration');\n    // this.mutationRoot.setMovable(false);\n    this.mutationRoot.setDeletable(false);\n    this.mutationRoot.contextMenu = false;\n\n    // override default custom procedure insert\n    this.mutationRoot.addStringNumberExternal = function(isNum) {\n      Blockly.WidgetDiv.hide(true);\n      if (isNum){\n        this.procCode_ = this.procCode_ + ' %n';\n        this.displayNames_.push('X');\n      } else {\n        this.procCode_ = this.procCode_ + ' %s';\n        this.displayNames_.push('TXT');\n      }\n      this.argumentIds_.push(Blockly.utils.genUid());\n      this.argumentDefaults_.push('');\n      this.updateDisplay_();\n      this.focusLastEditor_();\n    };\n\n    // this.mutationRoot.domToMutation(this.props.mutator);\n    if (!mutationText){\n      mutationText = '<xml>' +\n        '<mutation' +\n        ' proccode=\"' + Blockly.Msg['PROCEDURE_DEFAULT_NAME'] + '\"' +\n        ' argumentids=\"[]\"' +\n        ' argumentnames=\"[]\"' +\n        ' argumentdefaults=\"[]\"' +\n        ' warp=\"false\">' +\n        '</mutation>' +\n        '</xml>';\n    }\n    const dom = Blockly.Xml.textToDom(mutationText).firstChild;\n    this.mutationRoot.domToMutation(dom);\n    this.mutationRoot.initSvg();\n    this.mutationRoot.render();\n    if (blockType === 'bool' || blockType === 'output'){\n      this.mutationRoot.setPreviousStatement(false, null);\n      this.mutationRoot.setNextStatement(false, null);\n      this.mutationRoot.setInputsInline(true);\n      if (blockType === 'output'){\n        this.mutationRoot.setOutputShape(Blockly.OUTPUT_SHAPE_ROUND);\n        this.mutationRoot.setOutput(true, 'Boolean');\n      } else {\n        this.mutationRoot.setOutputShape(Blockly.OUTPUT_SHAPE_HEXAGONAL);\n        this.mutationRoot.setOutput(true, 'Number');\n      }\n    } else {\n\n    }\n    const {x, y} = this.mutationRoot.getRelativeToSurfaceXY();\n    const dy = (360 / 2) - (this.mutationRoot.height / 2) - y;\n    const dx = (480 / 2) - (this.mutationRoot.width / 2) - x;\n    this.mutationRoot.moveBy(dx, dy);\n    window.mu = this.mutationRoot;\n  }\n\n  injectDeclareWorkspace (ref){\n    this.blocks = ref;\n    const oldDefaultToolbox = Blockly.Blocks.defaultToolbox;\n    Blockly.Blocks.defaultToolbox = null;\n    this.declareWorkspace = Blockly.inject('declare', {\n      media: './media/'\n    });\n    Blockly.Blocks.defaultToolbox = oldDefaultToolbox;\n    \n    const _this = this;\n    this.declareWorkspace.addChangeListener(function(evt) {\n      // console.log(Object.getPrototypeOf(evt).type, evt);\n      if (_this.mutationRoot) {\n        // todo: blockly turn %n to %s in updateDeclarationProcCode_\n        _this.mutationRoot.onChangeFn();\n      }\n    });\n    this.makeBlock(this.state.addBlockType);\n  }\n\n  applyMutation (){\n    const svg = this.mutationRoot.getSvgRoot();\n    const bbox = svg.getBBox();\n    svg.removeAttribute('transform');\n    let xml = (new XMLSerializer).serializeToString(svg);\n    xml = `<svg id=\"src\" xmlns=\"http://www.w3.org/2000/svg\" width=\"${bbox.width}\" height=\"${bbox.height}\" >\n    ${xml}\n    </svg>`;\n\n    const mutation = this.mutationRoot.mutationToDom(true)\n    // console.log(mutation);\n    const argNames = JSON.parse(mutation.getAttribute('argumentnames'));\n    const args = [];\n\n    // parse proc code\n    let argCnt = 0;\n    const args0 = [];\n    let proccode = this.mutationRoot.getProcCode();\n    proccode = proccode.split(\" \");\n    for (let n=0; n<proccode.length; n++){\n      const p = proccode[n];\n      if (p === '%s'){ // string\n        const argName = argNames[argCnt];\n        const arg = {\n          argType: 'STRING',\n          placeholder: argName,\n          shadowType: 'text',\n          fieldType: 'TEXT',\n          json: {type: \"input_value\", name: argName}\n        }\n        proccode[n] = `%${argCnt+1}`;\n        args.push(arg);\n        argCnt+=1;\n      } else if (p === '%b'){ // bool\n        const argName = argNames[argCnt];\n        const arg = {\n          argType: 'BOOLEAN',\n          placeholder: argName,\n          // shadowType: 'text',\n          // fieldType: 'NUM'\n          check: 'Boolean',\n          json: {type: \"input_value\", name: argName, check: \"Boolean\"}\n        }\n        proccode[n] = `%${argCnt+1}`;\n        args.push(arg);\n        argCnt+=1;\n      } else if (p === '%n'){ // number\n        const argName = argNames[argCnt];\n        const arg = {\n          argType: 'NUMBER',\n          placeholder: argName,\n          shadowType: 'math_number',\n          fieldType: 'NUM',\n          json: {type: \"input_value\", name: argName}\n        }\n        proccode[n] = `%${argCnt+1}`;\n        args.push(arg);\n        argCnt+=1;\n      }\n    }\n\n    const msg = proccode.join(\" \");\n    const mutationText = `<xml>${Blockly.Xml.domToText(mutation)}</xml>`;\n    const newBlock = {\n      opcode: this.state.editBlockID,\n      svg: xml,\n      msg,\n      args,\n      mutationText: mutationText,\n      type: this.state.addBlockType\n    };\n    const blocks = [...this.state.blocks].filter(blk => blk.opcode !== this.state.editBlockID);\n    blocks.push(newBlock);\n    \n    this.setState({\n      showMutation: false,\n      blocks: blocks\n    });\n  }\n\n  addLabel (){\n    this.mutationRoot.addLabelExternal();\n  }\n  addInput (){\n    this.mutationRoot.addStringNumberExternal();\n  }\n  addInputNum (){\n    this.mutationRoot.addStringNumberExternal(true);\n  }\n  addBool (){\n    this.mutationRoot.addBooleanExternal();\n  }\n  addBlockFun (){\n    this.setState({\n      showMutation: true,\n      addBlockType: 'func',\n    });\n    if (this.declareWorkspace){\n      this.declareWorkspace.clear();\n      this.makeBlock();\n    }\n\n  }\n\n  addBlockOutput (){\n    this.setState({\n      addBlockType: 'output',\n      showMutation: true\n    });\n    if (this.declareWorkspace){\n      this.declareWorkspace.clear();\n      this.makeBlock('output');\n    }\n  }\n\n  addBlockBool (){\n    this.setState({\n      addBlockType: 'bool',\n      showMutation: true\n    });\n    if (this.declareWorkspace){\n      this.declareWorkspace.clear();\n      this.makeBlock('bool');\n\n    }\n\n  }\n\n  addBlockHat (){\n    this.setState({\n      addBlockType: 'hat',\n      showMutation: true\n    });\n    if (this.declareWorkspace){\n      this.declareWorkspace.clear();\n      this.makeBlock('hat');\n    }\n\n  }\n\n  editBlock (opcode){\n    const block = this.state.blocks.filter(blk => blk.opcode === opcode);\n    if (block && block.length == 1){\n      this.declareWorkspace.clear();\n      this.makeBlock(block[0].type, block[0].mutationText);\n      this.setState({\n        showMutation: true,\n        addBlockType: block[0].type\n      });\n    }\n  }\n\n  deleteBlock (opcode){\n    const blocks = [...this.state.blocks].filter(blk => blk.opcode !== opcode);\n    this.setState({blocks});\n  }\n\n  saveToJson (){\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(this.state, null, 2));\n    const downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\",     dataStr);\n    downloadAnchorNode.setAttribute(\"download\", this.state.extID + \".json\");\n    document.body.appendChild(downloadAnchorNode); // required for firefox\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  }\n\n  loadFromJson (file){\n    if (file){\n      let reader = new FileReader();\n      const _this = this;\n      reader.onerror = function () {\n          console.warn(\"read image file error\")\n      };\n      reader.onload = ev => {\n        this.setState(Object.assign({},\n          JSON.parse(reader.result)\n        ))\n      }\n      reader.readAsText(file);\n    }\n  }\n\n  exportJs (){\n    const className = this.state.extID;\n    const blockFunctions = [];\n    const blocksInfo = [];\n\n    for (const block of this.state.blocks){\n      let txt = block.msg;\n      let argIndex = 1;\n      const blockCode = {\n        opcode: `'${block.opcode}'`,\n        blockType: `BlockType.${BlockTypeMap[block.type]}`\n      };\n      if (block.args.length){\n        blockCode.arguments = {};\n        for (let n=0;n<block.args.length;n++){\n          const arg = block.args[n];\n          txt = txt.replace(`%${argIndex}`, `[${arg.json.name}]`);\n          // todo: fix missing %n define in custom procedure\n          blockCode.arguments[`${arg.json.name}`] = {\n            type: `ArgumentType.${arg.argType}`\n          }\n          argIndex+=1;\n        }\n      }\n      blockCode.text = `'${txt}'`;\n      blocksInfo.push(blockCode)\n      blockFunctions.push(`  ${block.opcode}(args){\n    \n  }`)\n    }\n\n    let blkInfoCode = JSON.stringify(blocksInfo, null, 2);\n    blkInfoCode = blkInfoCode.replace(/\"/g, '');\n    blkInfoCode = blkInfoCode.replace(/\\n/g, '\\n      ')\n\n    const menuIconURI = this.state.menuIcon ? `\"${this.state.menuIcon}\"` : 'null';\n    const blockIconURI = this.state.blockIcon ? `\"${this.state.blockIcon}\"` : 'null';\n\n    const indexJS = `\n// create by scratch3-extension generator\nconst ArgumentType = Scratch.ArgumentType;\nconst BlockType = Scratch.BlockType;\nconst formatMessage = Scratch.formatMessage;\nconst log = Scratch.log;\n\nconst menuIconURI = ${menuIconURI};\nconst blockIconURI = ${blockIconURI};\n\nclass ${className}{\n  constructor (runtime){\n    this.runtime = runtime;\n  }\n\n  getInfo (){\n    return {\n      id: '${this.state.extID}',\n      name: '${this.state.extName}',\n      color1: '${this.state.color1}',\n      color2: '${this.state.color2}',\n      menuIconURI: menuIconURI,\n      blockIconURI: blockIconURI,\n      blocks: ${blkInfoCode}\n    }\n  }\n${blockFunctions.join('\\n')}\n}\n\nmodule.exports = ${className};\n`;\n    console.log(indexJS);\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(indexJS);\n    const downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\",     dataStr);\n    downloadAnchorNode.setAttribute(\"download\", \"index.js\");\n    document.body.appendChild(downloadAnchorNode); // required for firefox\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  }\n\n  render() {\n    return (\n      <Layout style={{height: '100vh'}}>\n        <Sider\n          trigger={null}\n          collapsible\n          collapsed={this.state.collapsed}\n        >\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\">\n              <Icon type=\"plus\" />\n              <span>New Extension</span>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }}>\n            <Icon\n              className=\"trigger\"\n              type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n              onClick={() => this.setState({collapsed: !this.state.collapsed})}\n            />\n          </Header>\n          <Content style={{\n            margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280,\n          }}\n          >\n            <Row>\n              <Col span={14}>\n                <Divider>{strings.extdef}</Divider>\n                <Row className=\"config-row\">\n                  <Col span={2}>\n                    <p>{strings.extID}</p>\n                  </Col>\n                  <Col span={3}>\n                    <Input value={this.state.extID} onChange={e => this.setState({extID: e.target.value})} />\n                  </Col>\n                  <Col span={2} offset={1}>\n                    <p>{strings.extName}</p>\n                  </Col>\n                  <Col span={3}>\n                    <Input value={this.state.extName} onChange={e => this.setState({extName: e.target.value})} />\n                  </Col>\n                </Row>\n                <Row className=\"config-row\">\n                  <Col span={2}>{strings.maincolor}</Col>\n                  <Col span={3}>\n                    <div className=\"color-display\" style={{background: this.state.color1}} onClick={()=>this.setState({color1Pick: true})} />\n                    { this.state.color1Pick ? <div style={{position: \"absolute\", zIndex: '2'}}>\n                      <div className=\"color-cover\" onClick={()=>this.setState({color1Pick: false})}/>\n                        <SketchPicker color={ this.state.color1 } onChange={c => this.setState({color1: c.hex})} />\n                      </div> : null }\n                  </Col>\n                  <Col span={2}>{strings.secondcolor}</Col>\n                  <Col span={3}>\n                    <div className=\"color-display\" style={{background: this.state.color2}} onClick={()=>this.setState({color2Pick: true})} />\n                    { this.state.color2Pick ? <div style={{position: \"absolute\", zIndex: '2'}}>\n                      <div className=\"color-cover\" onClick={()=>this.setState({color2Pick: false})}/>\n                        <SketchPicker color={ this.state.color2 } onChange={c => this.setState({color2: c.hex})} />\n                      </div> : null }\n                  </Col>\n                </Row>\n                <Divider>{strings.extimg}</Divider>\n                <Row className=\"config-row\">\n                  <Col span={4}>\n                    {this.state.menuIcon ? <img className=\"icon-img\" src={this.state.menuIcon} /> : null}\n                    <Upload\n                        name=\"projheader\"\n                        accept=\".png,.svg\"\n                        className=\"header-uploader\"\n                        showUploadList={false}\n                        beforeUpload={this.uploadMenuIcon}\n                    >\n                        <Button><Icon type=\"picture\"/>{strings.menuIcon}</Button>\n                    </Upload>\n                  </Col>\n                  <Col span={4}>\n                    {this.state.blockIcon ? <img className=\"icon-img\" src={this.state.blockIcon} /> : null}\n                    <Upload\n                        name=\"projheader\"\n                        accept=\".png,.svg\"\n                        className=\"header-uploader\"\n                        showUploadList={false}\n                        beforeUpload={this.uploadBlockIcon}\n                    >\n                        <Button><Icon type=\"picture\"/>{strings.blockIcon}</Button>\n                    </Upload>\n                  </Col>\n                </Row>\n                <Divider>{strings.addblock}</Divider>\n                <Row className=\"btn-wrap\">\n                  <Button onClick={this.addBlockFun}>{strings.addBlockFun}</Button>\n                  <Button onClick={this.addBlockOutput}>{strings.addBlockOutput}</Button>\n                  <Button onClick={this.addBlockBool}>{strings.addBlockBool}</Button>\n                  <Button onClick={this.addBlockHat}>{strings.addBlockHat}</Button>\n                </Row>\n                <Divider></Divider>\n                <Table columns={this.blockColumn} dataSource={this.state.blocks} />\n              </Col>\n              <Col span={8} offset={1}>\n                <Button type=\"primary\" shape=\"round\" icon=\"picture\" onClick={this.generatePreview}>{strings.preview}</Button>\n                <div id=\"preview\" style={{height: 600, width: 480, marginTop: 10}}></div>\n                <Row className=\"btn-wrap\">\n                  <Button onClick={this.saveToJson}>Save</Button>\n                  <Upload \n                    name=\"jsonUpload\"\n                    accept=\".json\"\n                    className=\"header-uploader\"\n                    showUploadList={false}\n                    beforeUpload={this.loadFromJson}\n                  >\n                    <Button>Open</Button>\n                  </Upload>\n                  \n                  <Button type=\"primary\" onClick={this.exportJs}>Export index.js</Button>\n                </Row>\n              </Col>\n            </Row>\n          </Content>\n        </Layout>\n        <Modal\n            title=\"Modify Block\"\n            visible={this.state.showMutation}\n            onOk={this.applyMutation}\n            onCancel={this.closeMutationModal}\n        >\n          <div id=\"declare\" style={{width: 480, height: 360}} ref={this.injectDeclareWorkspace}></div>\n          <div className=\"btn-wrap\">\n            <Button onClick={this.addLabel}>{strings.addLabel}</Button>\n            <Button onClick={this.addInput}>{strings.addInput}</Button>\n            <Button onClick={this.addInputNum}>{strings.addInputNum}</Button>\n            <Button onClick={this.addBool}>{strings.addBool}</Button>\n          </div>\n          <p>{strings.uniqBlockName}</p>\n          <Divider />\n          <Row>\n            <Col span={3}>\n              <p>Block ID</p>\n            </Col>\n            <Col span={8}>\n              <Input value={this.state.editBlockID} onChange={e => this.setState({editBlockID: e.target.value})} />\n            </Col>\n            <Col span={12}>\n              <p>{strings.uniqBlockId}</p>\n            </Col>\n          </Row>\n        </Modal>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}